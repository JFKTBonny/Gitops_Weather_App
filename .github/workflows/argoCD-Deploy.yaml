name: 'Deploy ArgoCD on EKS'

# Trigger manually
on:
  workflow_dispatch:

env:
  ENVIRONMENT: dev
  # ARGO_CD_PASSWORD: ${{ secrets.ARGOCD_ADMIN_PASSWORD }}

jobs:
  argo-cd-deployment:
    name: 'Setup ArgoCD on EKS'
    runs-on: ubuntu-latest

    steps:
      # Checkout repo
      - name: Checkout Code
        uses: actions/checkout@v4

      # Install kubectl and plugins
      - name: Setup kubectl and plugins
        uses: marcofranssen/setup-kubectl@v1.3.0

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Update kubeconfig for EKS
      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --name gitops-${{ env.ENVIRONMENT }}-cluster \
                                    --region ${{ secrets.AWS_REGION }}

      # Install ArgoCD CLI
      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
          rm argocd-linux-amd64

      # Create ArgoCD namespace and install
      - name: Create ArgoCD Namespace and Install
        run: |
          kubectl create namespace argocd --dry-run=client -o yaml | kubectl apply -f -
          kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
          kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}'

      # Get ArgoCD External IP and Initial Password
      - name: Get ArgoCD External IP and Initial Password
        run: |
          chmod +x ./scripts/get-argo-cd-external-ip.sh ./scripts/get-argo-cd-initial-password.sh
          source ./scripts/get-argo-cd-external-ip.sh
          source ./scripts/get-argo-cd-initial-password.sh

      # Login to ArgoCD
      - name: Login to ArgoCD
        shell: bash
        run: |
          # Get the ArgoCD External IP
          EXTERNAL_IP=$(kubectl get svc argocd-server -n argocd -o jsonpath="{.status.loadBalancer.ingress[0].hostname}")

          # Get the initial admin password from Kubernetes secret
          PASSWORD=$(kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 --decode)

          # Login using argocd CLI
          echo "Logging in to ArgoCD server https://$EXTERNAL_IP ..."
          argocd login https://$EXTERNAL_IP --username admin --password $PASSWORD --insecure

      # Add Git repo to ArgoCD
      - name: Add ArgoCD Git Repo
        run: |
          argocd repo add https://github.com/JFKTBonny/Gitops_Weather_App.git \
            --username ${{ secrets.REPO_USER }} \
            --password ${{ secrets.REPO_TOKEN }}

      # Deploy GitOps application
      - name: Deploy ArgoCD Application
        run: |
          cd ./ArgoCD-GitOps
          kubectl create namespace weather-app-for-real --dry-run=client -o yaml | kubectl apply -f -
          kubectl apply -f argocd_deployment.yaml
